service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: "3"
useDotenv: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-swagger-ui
custom:
  swaggerUi:
    s3Bucket: aws-reactshop-api-docs
    exportType: swagger
    accepts: application/json
    swaggerUiConfig:
      supportedSubmitMethods: ["get", "post", "put", "delete"]

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

functions:
  getProductsList:
    handler: getProductsList.handler
    events:
      - http:
          method: get
          path: /products
          cors: true
    environment:
      DB_USER: ${env:DB_USER}
      DB_PASSWORD: ${env:DB_PASSWORD}
      DB_HOST: ${env:DB_HOST}
      DB_PORT: ${env:DB_PORT}
      DB_NAME: ${env:DB_NAME}
  getProductsById:
    handler: getProductsById.handler
    events:
      - http:
          method: get
          path: /products/{id}
          cors: true
  createProduct:
    handler: createProduct.handler
    events:
      - http:
          method: post
          path: /products
          cors: true
resources:
  Resources:
    S3BucketApiDocs:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.swaggerUi.s3Bucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
    S3BucketPolicyApiDocs:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: S3BucketApiDocs
        PolicyDocument:
          Statement:
            - Action:
                - s3:GetObject
              Effect: Allow
              Resource:
                Fn::Sub: arn:aws:s3:::${S3BucketApiDocs}/*
              Principal: "*"
